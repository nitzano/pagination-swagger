openapi: 3.0.1

info:
  title: Swagger pagination example
  description: "This is a sample server for the swagger pagination article"
  contact:
    email: 16689354+nitzano@users.noreply.github.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 1.0.0
externalDocs:
  description: find more
  url: https://github.com/nitzano/pagination-swagger
servers:
  - url: https://localhost:8080
tags:
  - name: dog
    description: Dogs endpoints
  - name: cat
    description: Cats endpoints
paths:
  /dogs:
    get:
      tags:
        - dog
      summary: Find all dogs1
      parameters:
        - { in: query, name: page, schema: { type: integer } }
        - { in: query, name: per_page, schema: { type: integer } }
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PaginatedResult"
                  - type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: "#/components/schemas/Dog"
  /cats:
    get:
      tags:
        - cat
      summary: Find all cats
      parameters:
        - { in: query, name: page, schema: { type: integer } }
        - { in: query, name: per_page, schema: { type: integer } }
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PaginatedResult"
                  - type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: "#/components/schemas/Cat"
components:
  schemas:
    Dog:
      type: object
      properties:
        id: { type: number }
        name: { type: string }
        ownerName: { type: string }
        favoriteToy: { type: string }
      example:
        id: 1
        name: Spike
        ownerName: Dave
        favoriteToy: Ball
    Cat:
      type: object
      properties:
        id: { type: number }
        name: { type: string }
        servantName: { type: string }
        favoriteFish: { type: string }
      example:
        id: 4
        name: Sushi
        servantName: Ron
        favoriteFish: Tuna
    PaginatedResult:
      type: object
      properties:
        has_next: { type: boolean, example: true }
        has_prev: { type: boolean, example: true }
        page: { type: number, example: 3 }
        pages: { type: number, example: 5 }
        per_page: { type: number, example: 20 }
        total: { type: number, example: 100 }
        results: { type: array, items: {} }
